version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: live-coding-db
    environment:
      POSTGRES_DB: livecoding
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: live-coding-backend
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=livecoding
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: live-coding-frontend
    ports:
      - "3001:3001"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/build
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_SOCKET_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
      - HOST=0.0.0.0
      - PORT=3001
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=0.0.0.0

volumes:
  postgres_data: